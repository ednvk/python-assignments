Assignment -1 
=================================================
def find_shortest_substrings(s, x):
    n = len(s)
    shortest_length = float('inf')
    shortest_substrings = []

    for i in range(n):
        for j in range(i + x - 1, n):
            if s[i] == s[j] and j - i + 1 >= x:
                if j - i + 1 < shortest_length:
                    shortest_length = j - i + 1
                    shortest_substrings = [s[i:j+1]]
                elif j - i + 1 == shortest_length:
                    shortest_substrings.append(s[i:j+1])

    return shortest_substrings

# Test cases
s = "abccdbacca"
test_cases = [3, 4, 5, 6, 7, 8]

for x in test_cases:
    substrings = find_shortest_substrings(s, x)
    if substrings:
        print(f"x: {x}\noutput: {' '.join(substrings)}")
    else:
        print(f"x: {x}\noutput: not-found")

====================================================
Assignment -2
====================================================
def modify_string(s):
    modified_string = list(s)
    n = len(s)
    changed_indices = set()

    for i in range(n):
        ascii_value = ord(s[i])

        if ascii_value % 2 == 0:
            if i < n - 1 and i + 1 not in changed_indices:
                new_ascii = ascii_value + (ascii_value % 7)
                if new_ascii > 127:
                    modified_string[i + 1] = 'S'
                else:
                    modified_string[i + 1] = chr(new_ascii)
                changed_indices.add(i + 1)
        else:
            if i > 0 and i - 1 not in changed_indices:
                new_ascii = ascii_value - (ascii_value % 5)
                if new_ascii < 0:
                    modified_string[i - 1] = 'S'
                else:
                    modified_string[i - 1] = chr(new_ascii)
                changed_indices.add(i - 1)

        if ascii_value < 0 or ascii_value > 127:
            modified_string[i] = 'S'

    return ''.join(modified_string)

# Test case
s = "sHQen}"
modified_string = modify_string(s)
print(modified_string)



